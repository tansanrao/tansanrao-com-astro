---
import Tag from '@components/Tag.astro';
import { formatDate } from '@utils/datetime';
import '@styles/global.css';

interface Props {
    note: any;
    href: string;
}

const { note, href } = Astro.props;
const { Content } = await note.render();
---

<article
    class="bg-light-ui/50 dark:bg-dark-ui/50 border-light-ui-2 dark:border-dark-ui-2 relative rounded-lg border p-6 shadow-sm"
>
    <div class="prose dark:prose-invert max-w-none">
        <a href={href} class="group block">
            <h2 class="mb-4 text-xl font-bold">{note.data.title}</h2>
        </a>
        {
            note.data.heroImage && (
                <img src={note.data.heroImage.src} alt="" class="mt-6 rounded-lg" loading="lazy" />
            )
        }
        <Content />
    </div>
    <div class="mt-6 flex flex-col gap-4 text-sm sm:flex-row sm:items-center sm:justify-between">
        <time
            datetime={note.data.pubDate.toISOString()}
            class="text-light-tx-2 dark:text-dark-tx-2 font-mono"
        >
            {formatDate(note.data.pubDate, 'full')}
        </time>
        {
            note.data.tags && note.data.tags.length > 0 && (
                <div class="flex flex-wrap gap-2">
                    {note.data.tags.map((tag: string) => (
                        <Tag tag={tag} />
                    ))}
                </div>
            )
        }
    </div>
</article>
