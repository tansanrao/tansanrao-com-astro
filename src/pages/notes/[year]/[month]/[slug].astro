---
import type { GetStaticPaths } from 'astro';
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import Layout from '@layouts/Layout.astro';
import Tag from '@components/Tag.astro';
import { formatDate } from '@utils/datetime';
import '@styles/global.css';
import PageTitle from '@components/PageTitle.astro';

export const getStaticPaths = (async () => {
    const notes = await getCollection('notes', ({ data }) => {
        return import.meta.env.DEV || !data.draft;
    });

    return notes.map((note) => {
        const pubDate = note.data.pubDate;
        const year = pubDate.getFullYear().toString();
        const month = (pubDate.getMonth() + 1).toString().padStart(2, '0');

        return {
            params: {
                year,
                month,
                slug: note.slug
            },
            props: { note }
        };
    });
}) satisfies GetStaticPaths;

interface Props {
    note: CollectionEntry<'notes'>;
}

const { note } = Astro.props;
const { title, pubDate, updatedDate, tags, heroImage, footnotes = [], draft = false } = note.data;
const { Content } = await note.render();

// Check if note is older than 2 years
const twoYearsAgo = new Date();
twoYearsAgo.setFullYear(twoYearsAgo.getFullYear() - 2);
const isOld = (updatedDate || pubDate) < twoYearsAgo;
---

<Layout title={title} description={`Note: ${title}`}>
    <PageTitle title="Notes" subtitle="Short-form thoughts, updates, and observations." />
    <div class="mx-auto max-w-3xl">
        <!-- Note Header -->
        <header class="mb-8">
            {
                heroImage && (
                    <div class="mb-8">
                        <img
                            src={heroImage.src}
                            alt={title}
                            class="h-auto w-full rounded-lg shadow-md"
                        />
                    </div>
                )
            }

            <h1 class="text-light-tx dark:text-dark-tx mb-4 text-3xl font-bold sm:text-4xl">
                {title}
            </h1>

            <div
                class="text-light-tx-2 dark:text-dark-tx-2 mb-6 flex flex-col gap-1 text-sm sm:flex-row sm:items-center sm:gap-4"
            >
                <time datetime={pubDate.toISOString()}>
                    Published on {formatDate(pubDate, 'full')}
                </time>
                {
                    updatedDate && (
                        <>
                            <span class="hidden sm:inline">•</span>
                            <span>Updated on {formatDate(updatedDate, 'full')}</span>
                        </>
                    )
                }
            </div>

            {/* Tags */}
            {
                tags && tags.length > 0 && (
                    <div class="mb-6 flex flex-wrap gap-2">
                        {tags.map((tag) => (
                            <Tag tag={tag} />
                        ))}
                    </div>
                )
            }

            {/* Draft Notice */}
            {
                draft && (
                    <div class="border-light-ye dark:border-dark-ye mb-6 rounded-lg border-l-4 bg-yellow-50 p-4 dark:bg-yellow-900/20">
                        <h2 class="text-light-ye-2 dark:text-dark-ye-2 mb-1 text-base font-semibold">
                            Draft Note
                        </h2>
                        <p class="text-light-ye dark:text-dark-ye text-sm">
                            This note is a draft and will not be visible in production.
                        </p>
                    </div>
                )
            }

            {/* Old Content Notice */}
            {
                isOld && (
                    <div class="border-light-bl dark:border-dark-bl mb-6 rounded-lg border-l-4 bg-blue-50 p-4 dark:bg-blue-900/20">
                        <h2 class="text-light-bl-2 dark:text-dark-bl-2 mb-1 text-base font-semibold">
                            Older Content
                        </h2>
                        <p class="text-light-bl dark:text-dark-bl text-sm">
                            This note is over 2 years old. The thoughts and ideas may have evolved
                            since then.
                        </p>
                    </div>
                )
            }
        </header>

        <!-- Note Content -->
        <article class="prose dark:prose-invert max-w-none">
            <Content />

            {
                footnotes.length > 0 && (
                    <footer class="border-light-ui-2 dark:border-dark-ui-2 mt-16 border-t pt-8">
                        <h2 class="text-light-tx dark:text-dark-tx mb-4 text-base font-semibold">
                            Footnotes
                        </h2>
                        <ol class="space-y-2 text-sm">
                            {footnotes.map(({ id, content }) => (
                                <li
                                    id={`fn-${id}`}
                                    class="text-light-tx-2 dark:text-dark-tx-2 flex gap-2"
                                >
                                    <a
                                        href={`#fnref-${id}`}
                                        class="text-light-bl dark:text-dark-bl hover:text-light-bl-2 dark:hover:text-dark-bl-2 transition-colors"
                                        aria-label={`Back to reference ${id}`}
                                    >
                                        {id}
                                    </a>
                                    <div set:html={content} />
                                </li>
                            ))}
                        </ol>
                    </footer>
                )
            }
        </article>

        <!-- Back to Notes Link -->
        <nav class="border-light-ui-2 dark:border-dark-ui-2 mt-12 border-t pt-8">
            <a
                href="/notes"
                class="text-light-bl dark:text-dark-bl hover:text-light-bl-2 dark:hover:text-dark-bl-2 inline-flex items-center transition-colors"
            >
                ← Back to all notes
            </a>
        </nav>
    </div>
</Layout>
